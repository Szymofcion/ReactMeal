{"ast":null,"code":"/*\n Copyright 2012-2015, Yahoo Inc.\n Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\n'use strict';\n\n/**\n * istanbul-lib-coverage exports an API that allows you to create and manipulate\n * file coverage, coverage maps (a set of file coverage objects) and summary\n * coverage objects. File coverage for the same file can be merged as can\n * entire coverage maps.\n *\n * @module Exports\n */\nconst {\n  FileCoverage\n} = require('./lib/file-coverage');\nconst {\n  CoverageMap\n} = require('./lib/coverage-map');\nconst {\n  CoverageSummary\n} = require('./lib/coverage-summary');\nmodule.exports = {\n  /**\n   * creates a coverage summary object\n   * @param {Object} obj an argument with the same semantics\n   *  as the one passed to the `CoverageSummary` constructor\n   * @returns {CoverageSummary}\n   */\n  createCoverageSummary(obj) {\n    if (obj && obj instanceof CoverageSummary) {\n      return obj;\n    }\n    return new CoverageSummary(obj);\n  },\n  /**\n   * creates a CoverageMap object\n   * @param {Object} obj optional - an argument with the same semantics\n   *  as the one passed to the CoverageMap constructor.\n   * @returns {CoverageMap}\n   */\n  createCoverageMap(obj) {\n    if (obj && obj instanceof CoverageMap) {\n      return obj;\n    }\n    return new CoverageMap(obj);\n  },\n  /**\n   * creates a FileCoverage object\n   * @param {Object} obj optional - an argument with the same semantics\n   *  as the one passed to the FileCoverage constructor.\n   * @returns {FileCoverage}\n   */\n  createFileCoverage(obj) {\n    if (obj && obj instanceof FileCoverage) {\n      return obj;\n    }\n    return new FileCoverage(obj);\n  }\n};\n\n/** classes exported for reuse */\nmodule.exports.classes = {\n  /**\n   * the file coverage constructor\n   */\n  FileCoverage\n};","map":{"version":3,"names":["FileCoverage","require","CoverageMap","CoverageSummary","module","exports","createCoverageSummary","obj","createCoverageMap","createFileCoverage","classes"],"sources":["C:/Users/szymo/OneDrive/Pulpit/Programowanie/Kurs tworzenia stron/NewReact/ReactMeals/node_modules/istanbul-lib-coverage/index.js"],"sourcesContent":["/*\n Copyright 2012-2015, Yahoo Inc.\n Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\n'use strict';\n\n/**\n * istanbul-lib-coverage exports an API that allows you to create and manipulate\n * file coverage, coverage maps (a set of file coverage objects) and summary\n * coverage objects. File coverage for the same file can be merged as can\n * entire coverage maps.\n *\n * @module Exports\n */\nconst { FileCoverage } = require('./lib/file-coverage');\nconst { CoverageMap } = require('./lib/coverage-map');\nconst { CoverageSummary } = require('./lib/coverage-summary');\n\nmodule.exports = {\n    /**\n     * creates a coverage summary object\n     * @param {Object} obj an argument with the same semantics\n     *  as the one passed to the `CoverageSummary` constructor\n     * @returns {CoverageSummary}\n     */\n    createCoverageSummary(obj) {\n        if (obj && obj instanceof CoverageSummary) {\n            return obj;\n        }\n        return new CoverageSummary(obj);\n    },\n    /**\n     * creates a CoverageMap object\n     * @param {Object} obj optional - an argument with the same semantics\n     *  as the one passed to the CoverageMap constructor.\n     * @returns {CoverageMap}\n     */\n    createCoverageMap(obj) {\n        if (obj && obj instanceof CoverageMap) {\n            return obj;\n        }\n        return new CoverageMap(obj);\n    },\n    /**\n     * creates a FileCoverage object\n     * @param {Object} obj optional - an argument with the same semantics\n     *  as the one passed to the FileCoverage constructor.\n     * @returns {FileCoverage}\n     */\n    createFileCoverage(obj) {\n        if (obj && obj instanceof FileCoverage) {\n            return obj;\n        }\n        return new FileCoverage(obj);\n    }\n};\n\n/** classes exported for reuse */\nmodule.exports.classes = {\n    /**\n     * the file coverage constructor\n     */\n    FileCoverage\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;EAAEA;AAAa,CAAC,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AACvD,MAAM;EAAEC;AAAY,CAAC,GAAGD,OAAO,CAAC,oBAAoB,CAAC;AACrD,MAAM;EAAEE;AAAgB,CAAC,GAAGF,OAAO,CAAC,wBAAwB,CAAC;AAE7DG,MAAM,CAACC,OAAO,GAAG;EACb;AACJ;AACA;AACA;AACA;AACA;EACIC,qBAAqB,CAACC,GAAG,EAAE;IACvB,IAAIA,GAAG,IAAIA,GAAG,YAAYJ,eAAe,EAAE;MACvC,OAAOI,GAAG;IACd;IACA,OAAO,IAAIJ,eAAe,CAACI,GAAG,CAAC;EACnC,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIC,iBAAiB,CAACD,GAAG,EAAE;IACnB,IAAIA,GAAG,IAAIA,GAAG,YAAYL,WAAW,EAAE;MACnC,OAAOK,GAAG;IACd;IACA,OAAO,IAAIL,WAAW,CAACK,GAAG,CAAC;EAC/B,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIE,kBAAkB,CAACF,GAAG,EAAE;IACpB,IAAIA,GAAG,IAAIA,GAAG,YAAYP,YAAY,EAAE;MACpC,OAAOO,GAAG;IACd;IACA,OAAO,IAAIP,YAAY,CAACO,GAAG,CAAC;EAChC;AACJ,CAAC;;AAED;AACAH,MAAM,CAACC,OAAO,CAACK,OAAO,GAAG;EACrB;AACJ;AACA;EACIV;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\szymo\\\\OneDrive\\\\Pulpit\\\\Programowanie\\\\Kurs tworzenia stron\\\\NewReact\\\\ReactMeals\\\\src\\\\store\\\\CartProvider.js\";\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  var _s = $RefreshSig$();\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  const CartProvider = props => {\n    _s();\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n    const addItemToCartHandller = item => {\n      dispatchCartAction({\n        type: 'ADD_ITEM',\n        item: item\n      });\n    };\n    const removeItemCartHandler = id => {\n      dispatchCartAction({\n        type: 'REMOVE_ITEM',\n        id: id\n      });\n    };\n    const cartContext = {\n      items: cartState.items,\n      totalAmount: cartState.totalAmount,\n      addItem: addItemToCartHandller,\n      removeItem: removeItemCartHandler\n    };\n    return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n      value: cartContext,\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  };\n  _s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n};\nexport default CartProvider;","map":{"version":3,"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandller","removeItemCartHandler","cartContext","addItem","removeItem","children"],"sources":["C:/Users/szymo/OneDrive/Pulpit/Programowanie/Kurs tworzenia stron/NewReact/ReactMeals/src/store/CartProvider.js"],"sourcesContent":["import { useReducer } from \"react\"\r\nimport CartContext from \"./cart-context\"\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmount: 0,\r\n}\r\nconst cartReducer = (state, action) => {\r\n    if (action.type === 'ADD') {\r\n      const updatedTotalAmount =\r\n        state.totalAmount + action.item.price * action.item.amount;\r\n  \r\n      const existingCartItemIndex = state.items.findIndex(\r\n        (item) => item.id === action.item.id\r\n      );\r\n      const existingCartItem = state.items[existingCartItemIndex];\r\n      let updatedItems;\r\n  \r\n      if (existingCartItem) {\r\n        const updatedItem = {\r\n          ...existingCartItem,\r\n          amount: existingCartItem.amount + action.item.amount,\r\n        };\r\n        updatedItems = [...state.items];\r\n        updatedItems[existingCartItemIndex] = updatedItem;\r\n      } else {\r\n        updatedItems = state.items.concat(action.item);\r\n      }\r\n  \r\n      return {\r\n        items: updatedItems,\r\n        totalAmount: updatedTotalAmount,\r\n      };\r\n    } \r\nconst CartProvider = props => {\r\n    const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState)\r\n\r\n    const addItemToCartHandller = item => {\r\n        dispatchCartAction({ type: 'ADD_ITEM', item: item })\r\n    }\r\n\r\n    const removeItemCartHandler = id => {\r\n        dispatchCartAction({ type: 'REMOVE_ITEM', id: id })\r\n    }\r\n\r\n    const cartContext = {\r\n        items: cartState.items,\r\n        totalAmount: cartState.totalAmount,\r\n        addItem: addItemToCartHandller,\r\n        removeItem: removeItemCartHandler,\r\n    };\r\n\r\n    return <CartContext.Provider value={cartContext}>\r\n        {props.children}\r\n    </CartContext.Provider>\r\n}\r\n}\r\nexport default CartProvider"],"mappings":";AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,WAAW,MAAM,gBAAgB;AAAA;AAExC,MAAMC,gBAAgB,GAAG;EACrBC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE;AACjB,CAAC;AACD,MAAMC,WAAW,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EAAA;EACnC,IAAIA,MAAM,CAACC,IAAI,KAAK,KAAK,EAAE;IACzB,MAAMC,kBAAkB,GACtBH,KAAK,CAACF,WAAW,GAAGG,MAAM,CAACG,IAAI,CAACC,KAAK,GAAGJ,MAAM,CAACG,IAAI,CAACE,MAAM;IAE5D,MAAMC,qBAAqB,GAAGP,KAAK,CAACH,KAAK,CAACW,SAAS,CAChDJ,IAAI,IAAKA,IAAI,CAACK,EAAE,KAAKR,MAAM,CAACG,IAAI,CAACK,EAAE,CACrC;IACD,MAAMC,gBAAgB,GAAGV,KAAK,CAACH,KAAK,CAACU,qBAAqB,CAAC;IAC3D,IAAII,YAAY;IAEhB,IAAID,gBAAgB,EAAE;MACpB,MAAME,WAAW,GAAG;QAClB,GAAGF,gBAAgB;QACnBJ,MAAM,EAAEI,gBAAgB,CAACJ,MAAM,GAAGL,MAAM,CAACG,IAAI,CAACE;MAChD,CAAC;MACDK,YAAY,GAAG,CAAC,GAAGX,KAAK,CAACH,KAAK,CAAC;MAC/Bc,YAAY,CAACJ,qBAAqB,CAAC,GAAGK,WAAW;IACnD,CAAC,MAAM;MACLD,YAAY,GAAGX,KAAK,CAACH,KAAK,CAACgB,MAAM,CAACZ,MAAM,CAACG,IAAI,CAAC;IAChD;IAEA,OAAO;MACLP,KAAK,EAAEc,YAAY;MACnBb,WAAW,EAAEK;IACf,CAAC;EACH;EACJ,MAAMW,YAAY,GAAGC,KAAK,IAAI;IAAA;IAC1B,MAAM,CAACC,SAAS,EAAEC,kBAAkB,CAAC,GAAGvB,UAAU,CAACK,WAAW,EAAEH,gBAAgB,CAAC;IAEjF,MAAMsB,qBAAqB,GAAGd,IAAI,IAAI;MAClCa,kBAAkB,CAAC;QAAEf,IAAI,EAAE,UAAU;QAAEE,IAAI,EAAEA;MAAK,CAAC,CAAC;IACxD,CAAC;IAED,MAAMe,qBAAqB,GAAGV,EAAE,IAAI;MAChCQ,kBAAkB,CAAC;QAAEf,IAAI,EAAE,aAAa;QAAEO,EAAE,EAAEA;MAAG,CAAC,CAAC;IACvD,CAAC;IAED,MAAMW,WAAW,GAAG;MAChBvB,KAAK,EAAEmB,SAAS,CAACnB,KAAK;MACtBC,WAAW,EAAEkB,SAAS,CAAClB,WAAW;MAClCuB,OAAO,EAAEH,qBAAqB;MAC9BI,UAAU,EAAEH;IAChB,CAAC;IAED,oBAAO,QAAC,WAAW,CAAC,QAAQ;MAAC,KAAK,EAAEC,WAAY;MAAA,UAC3CL,KAAK,CAACQ;IAAQ;MAAA;MAAA;MAAA;IAAA,QACI;EAC3B,CAAC;EAAA,GArBKT,YAAY;AAsBlB,CAAC;AACD,eAAeA,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}